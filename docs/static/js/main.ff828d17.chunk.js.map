{"version":3,"sources":["styles/Dashboard.module.css","styles/HeroSearch.module.css","styles/Heroes.module.css","styles/HeroDetail.module.css","styles/App.module.css","styles/Messages.module.css","model/messageService.js","model/heroService.js","controller/controller.js","HeroSearch.jsx","Dashboard.jsx","HeroDetail.jsx","Heroes.jsx","Messages.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","messages","notify","MessageService","message","push","f","heroes","id","name","HeroService","Promise","resolve","reject","setTimeout","log","hero","find","handleError","term","trim","matches","filter","includes","length","Math","max","map","a","getHero","error","console","add","useHeroes","useState","setHeroes","addHero","deleteHero","useEffect","getHeroes","HeroSearch","setName","searchHeroes","useSearch","Heroes","key","className","li","to","htmlFor","styles","onChange","target","value","classnames","ul","Dashboard","topHeroes","slice","TopHeroes","classNames","h4","h3","grid","HeroDetail","useParams","history","useHistory","setHero","h","updateHero","useHero","toUpperCase","label","input","placeholder","button","onClick","goBack","classHeroes","HeroesList","badge","delete","title","Messages","setMessages","clear","useMessages","clearMessages","MessageList","h2","App","h1","nav","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ff828d17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"col-1-4\":\"Dashboard_col-1-4__kqr7y\",\"a\":\"Dashboard_a__22u35\",\"h3\":\"Dashboard_h3__1YNP1\",\"h4\":\"Dashboard_h4__3W9mb\",\"grid\":\"Dashboard_grid__1vyT2\",\"module\":\"Dashboard_module__VOd0-\",\"grid-pad\":\"Dashboard_grid-pad__3Wruk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-result\":\"HeroSearch_search-result__2f1rZ\",\"li\":\"HeroSearch_li__3m3EA\",\"a\":\"HeroSearch_a__C5yvc\",\"search-box\":\"HeroSearch_search-box__2henY\",\"ul\":\"HeroSearch_ul__1k6Kv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroes\":\"Heroes_heroes__mAHDT\",\"badge\":\"Heroes_badge__3bknk\",\"button\":\"Heroes_button__2a4kL\",\"delete\":\"Heroes_delete__1Ue_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"HeroDetail_label__1Vkrj\",\"input\":\"HeroDetail_input__3H3kt\",\"button\":\"HeroDetail_button__2112_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"App_h1__hZgWr\",\"h2\":\"App_h2__3EgXg\",\"nav\":\"App_nav__34azk\",\"a\":\"App_a__2zieo\",\"active\":\"App_active__1QGer\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Messages_h2__13Pdp\",\"button\":\"Messages_button__2gEah\",\"clear\":\"Messages_clear__3PNtu\"};","let messages = [];\r\nlet notify = () => {};\r\nexport default class MessageService {\r\n  static add(message) {\r\n    messages.push(message);\r\n    notify(messages);\r\n  }\r\n\r\n  static clear() {\r\n    messages = [];\r\n    notify(messages);\r\n  }\r\n\r\n  static onChange(f) {\r\n    notify = f;\r\n  }\r\n}\r\n","import MessageService from './messageService';\r\n\r\nconst TIME = 50;\r\nlet heroes = [\r\n  { id: 11, name: 'Dr Nice' },\r\n  { id: 12, name: 'Narco' },\r\n  { id: 13, name: 'Bombasto' },\r\n  { id: 14, name: 'Celeritas' },\r\n  { id: 15, name: 'Magneta' },\r\n  { id: 16, name: 'RubberMan' },\r\n  { id: 17, name: 'Dynama' },\r\n  { id: 18, name: 'Dr IQ' },\r\n  { id: 19, name: 'Magma' },\r\n  { id: 20, name: 'Tornado' },\r\n];\r\n\r\nexport default class HeroService {\r\n  /** GET heroes from the server */\r\n  static getHeroes() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        this.log('fetched heroes');\r\n        resolve(heroes);\r\n      }, TIME);\r\n    });\r\n  }\r\n\r\n  /** GET hero by id. Will 404 if id not found */\r\n  static getHero(id) {\r\n    return new Promise((resolve, reject) => {\r\n      const hero = heroes.find(({ id: id_hero }) => id_hero === id);\r\n      setTimeout(() => {\r\n        if (hero) {\r\n          this.log(`fetched hero id=${id}`);\r\n          resolve(hero);\r\n        } else {\r\n          this.handleError(reject, `getHero id=${id}`);\r\n        }\r\n      }, TIME);\r\n    });\r\n  }\r\n\r\n  /* GET heroes whose name contains search term */\r\n  static searchHeroes(term) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (!term.trim()) resolve([]); // if not search term, return empty hero array.\r\n\r\n        const matches = heroes.filter((hero) => hero.name.includes(term));\r\n\r\n        if (matches.length) HeroService.log(`found heroes matching \"${term}\"`);\r\n        else HeroService.log(`no heroes matching \"${term}\"`);\r\n\r\n        resolve(matches);\r\n      }, TIME);\r\n    });\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new hero to the server */\r\n  static addHero(name) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const id = Math.max(...heroes.map((hero) => hero.id)) + 1;\r\n        heroes.push({ id, name });\r\n\r\n        HeroService.log(`added hero w/ id=${id}`);\r\n        resolve(heroes);\r\n      }, TIME);\r\n    });\r\n  }\r\n\r\n  /** DELETE: delete the hero from the server */\r\n  static deleteHero(id) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const hero = await HeroService.getHero(id);\r\n      setTimeout(() => {\r\n        if (!hero) this.handleError(reject, `deleteHero id=${id}`);\r\n\r\n        heroes = heroes.filter((hero) => hero.id !== id);\r\n\r\n        resolve(heroes);\r\n      }, TIME);\r\n    });\r\n  }\r\n\r\n  // /** PUT: update the hero on the server */\r\n  static updateHero(hero) {\r\n    const { id, name } = hero;\r\n    return new Promise(async (resolve, reject) => {\r\n      const hero = await HeroService.getHero(id);\r\n      setTimeout(() => {\r\n        if (!hero) this.handleError(reject, `updateHero id=${id}`);\r\n\r\n        hero.name = name;\r\n\r\n        resolve(hero);\r\n      }, TIME);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  static handleError(reject, error) {\r\n    console.error(error);\r\n\r\n    HeroService.log(`failed: ${error}`);\r\n\r\n    reject(error);\r\n  }\r\n\r\n  // /** Log a HeroService message with the MessageService */\r\n  static log(message) {\r\n    MessageService.add(`HeroService: ${message}`);\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport HeroService from '../model/heroService';\r\nimport MessageService from '../model/messageService';\r\n\r\nexport const useHeroes = () => {\r\n  const [heroes, setHeroes] = useState([]);\r\n\r\n  const addHero = async (name) => {\r\n    const heroes = await HeroService.addHero(name);\r\n    setHeroes([...heroes]);\r\n  };\r\n\r\n  const deleteHero = async (id) => {\r\n    const heroes = await HeroService.deleteHero(+id);\r\n    setHeroes([...heroes]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const heroes = await HeroService.getHeroes();\r\n      setHeroes([...heroes]);\r\n    })();\r\n  }, []);\r\n\r\n  return [heroes, addHero, deleteHero];\r\n};\r\n\r\nexport const useHero = (id) => {\r\n  const [hero, setHero] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const h = await HeroService.getHero(id);\r\n      setHero(h);\r\n    })();\r\n  }, [id]);\r\n\r\n  return [hero, setHero, HeroService.updateHero];\r\n};\r\n\r\nexport const useSearch = (name) => {\r\n  const [heroes, setHeroes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (name) {\r\n      (async () => {\r\n        const heroes = await HeroService.searchHeroes(name);\r\n        setHeroes(heroes);\r\n      })();\r\n    }\r\n  }, [name]);\r\n\r\n  return [heroes];\r\n};\r\n\r\nexport const useMessages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    MessageService.onChange((messages) => setMessages([...messages]));\r\n  });\r\n\r\n  return [messages, MessageService.clear];\r\n};\r\n","import classnames from 'classnames';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSearch } from './controller/controller';\r\nimport styles, { a, li, ul } from './styles/HeroSearch.module.css';\r\n\r\nexport function HeroSearch() {\r\n  const [name, setName] = useState();\r\n  const [heroes] = useSearch(name);\r\n\r\n  const search = ({ target: { value: name } }) => setName(name);\r\n\r\n  const Heroes = () =>\r\n    heroes.map((hero) => (\r\n      <li key={hero.id} className={li}>\r\n        <Link className={a} to={`/detail/${hero.id}`}>\r\n          {hero.name}\r\n        </Link>\r\n      </li>\r\n    ));\r\n\r\n  return (\r\n    <div id='search-component'>\r\n      <h4>\r\n        <label htmlFor='search-box'>Hero Search</label>\r\n      </h4>\r\n\r\n      <input className={styles['search-box']} onChange={search} />\r\n\r\n      <ul className={classnames(styles['search-result'], ul)}>\r\n        <Heroes />\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHeroes } from './controller/controller';\r\nimport { HeroSearch } from './HeroSearch';\r\nimport styles, { a, grid, h3, h4, module } from './styles/Dashboard.module.css';\r\n\r\nexport function Dashboard() {\r\n  const [heroes] = useHeroes();\r\n  const topHeroes = heroes.slice(1, 5);\r\n\r\n  const TopHeroes = () =>\r\n    topHeroes.map((hero) => (\r\n      <Link key={hero.id} className={classNames(styles['col-1-4'], a)} to={`/detail/${hero.id}`}>\r\n        <div className={classNames(module, 'hero')}>\r\n          <h4 className={h4}>{hero.name}</h4>\r\n        </div>\r\n      </Link>\r\n    ));\r\n\r\n  return (\r\n    <>\r\n      <h3 className={h3}>Top Heroes</h3>\r\n      <div className={classNames(grid, styles['grid-pad'])}>\r\n        <TopHeroes />\r\n      </div>\r\n\r\n      <HeroSearch />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useHero } from './controller/controller';\r\nimport { button, input, label } from './styles/HeroDetail.module.css';\r\n\r\nexport function HeroDetail() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [hero, setHero, updateHero] = useHero(+id);\r\n\r\n  const change = ({ target: { value: name } }) => setHero({ id: +id, name });\r\n  const save = () => updateHero(hero);\r\n\r\n  return (\r\n    <>\r\n      {!hero ? null : (\r\n        <div>\r\n          <h2>{hero.name.toUpperCase()} Details</h2>\r\n          <div>\r\n            <span>id: </span>\r\n            {hero.id}\r\n          </div>\r\n          <div>\r\n            <label className={label}>\r\n              name:\r\n              <input className={input} value={hero.name} placeholder='name' onChange={change} />\r\n            </label>\r\n          </div>\r\n          <button className={button} onClick={history.goBack}>\r\n            go back\r\n          </button>\r\n          <button className={button} onClick={save}>\r\n            save\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import classNames from 'classnames';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHeroes } from './controller/controller';\r\nimport styles, { badge, button, heroes as classHeroes } from './styles/Heroes.module.css';\r\n\r\nexport function Heroes() {\r\n  const [heroes, addHero, deleteHero] = useHeroes();\r\n  const [name, setName] = useState('');\r\n\r\n  const change = ({ target: { value: name } }) => setName(name);\r\n  const add = () => {\r\n    addHero(name);\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>My Heroes</h2>\r\n      <div>\r\n        <label>\r\n          Hero name: <input value={name} onChange={change} />\r\n        </label>\r\n        {/* <!-- (click) passes input value to add() and then clears the input --> */}\r\n        <button className={button} onClick={add}>\r\n          add\r\n        </button>\r\n      </div>\r\n\r\n      <ul className={classHeroes}>\r\n        <HeroesList heroes={heroes} deleteHero={deleteHero} />\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction HeroesList({ heroes, deleteHero }) {\r\n  return heroes.map(({ id, name }) => (\r\n    <li key={id}>\r\n      <Link to={`/detail/${id}`}>\r\n        <span className={badge}>{id}</span> {name}\r\n      </Link>\r\n      <button\r\n        className={classNames(button, styles.delete)}\r\n        title='delete hero'\r\n        onClick={() => deleteHero(id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  ));\r\n}\r\n","import classnames from 'classnames';\r\nimport React from 'react';\r\nimport { useMessages } from './controller/controller';\r\nimport { button, clear, h2 } from './styles/Messages.module.css';\r\n\r\nexport function Messages() {\r\n  const [messages, clearMessages] = useMessages();\r\n\r\n  const MessageList = () => messages.map((message, id) => <div key={id}>{message}</div>);\r\n\r\n  return !messages ? null : (\r\n    <div>\r\n      <h2 className={h2}>Messages</h2>\r\n      <button className={classnames(clear, button)} onClick={clearMessages}>\r\n        clear\r\n      </button>\r\n      <MessageList />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\n\nimport { Dashboard } from './Dashboard';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { HeroDetail } from './HeroDetail';\nimport { Heroes } from './Heroes';\n\nimport { a, h1, nav } from './styles/App.module.css';\nimport { Messages } from './Messages';\n\nfunction App() {\n  const title = 'Tour of Heroes';\n  return (\n    <>\n      <Router>\n        <h1 className={h1}>{title}</h1>\n        <nav className={nav}>\n          <Link className={a} to='/dashboard'>\n            Dashboard\n          </Link>\n          <Link className={a} to='/heroes'>\n            Heroes\n          </Link>\n        </nav>\n        <Switch>\n          <Route exact path='/'>\n            <Dashboard />\n          </Route>\n          <Route path='/heroes'>\n            <Heroes />\n          </Route>\n          <Route path='/dashboard'>\n            <Dashboard />\n          </Route>\n          <Route path='/detail/:id'>\n            <HeroDetail></HeroDetail>\n          </Route>\n        </Switch>\n        <Messages />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}